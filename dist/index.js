"use strict";function createSelector(t){var e=t.selector,n=t.getDependents;if(!isFunction(e)||!isFunction(n))throw new TypeError("createCachedSelector: invalid arguments passed, selector and getDependents must both be functions");var o=new WeakMap;return function(t){for(var r=arguments.length,c=Array(r>1?r-1:0),a=1;a<r;a++)c[a-1]=arguments[a];var s=n.apply(void 0,[t].concat(c)),i=Object.keys(s).sort().map(function(t){return s[t]});if(c.some(isObject)&&console.warn("Do not pass complex objects as arguments to a cachedSelector"),isObject(s)&&!isEmpty(s)){var u=o;i.forEach(function(t){if(!u.has(t)){var e=last(i)===t;u.set(t,e?new Map:new WeakMap)}u=u.get(t)});var f=castArray(c).join();return u.has(f)||u.set(f,e.apply(void 0,[s].concat(c))),u.get(f)}console.warn("getDependents must return an object")}}function isObject(t){var e=void 0===t?"undefined":_typeof(t);return null!==t&&("object"==e||"function"==e)}function isFunction(t){var e=void 0===t?"undefined":_typeof(t);return null!==t&&"function"===e}function castArray(){if(!arguments.length)return[];var t=arguments[0];return Array.isArray(t)?t:[t]}function last(t){var e=null==t?0:t.length;return e?t[e-1]:void 0}function isEmpty(t){return 0===Object.keys(t).length}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};module.exports=createSelector;
